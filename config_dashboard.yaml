type: grid
cards:
  - type: heading
    heading: Plans
    heading_style: title
  - type: entities
    entities:
      - entity: input_boolean.trader_sell_enabled_a
        name: Enabled
      - entity: input_number.trader_sell_price_a
      - entity: input_number.trader_export_rate_a
      - entity: input_number.trader_soc_sell_to_a
    title: Plan A
    card_mod:
      style: |
        ha-card {  {% if is_state('sensor.trader_plan_letter','a') %}
          border-color: yellow;
          border-width: 8px;
        {% endif %}
        {% if is_state('input_boolean.trader_sell_enabled_a','off') %}
          color: gray;
        {%endif%} }
  - type: entities
    entities:
      - entity: input_boolean.trader_sell_enabled_b
        name: Enabled
      - entity: input_number.trader_sell_price_b
      - entity: input_number.trader_export_rate_b
      - entity: input_number.trader_soc_sell_to_b
    title: Plan B
    card_mod:
      style: |
        ha-card {  {% if is_state('sensor.trader_plan_letter','b') %}
          border-color: yellow;
          border-width: 8px;
        {% elif is_state('input_boolean.trader_sell_enabled_b','off') %}
          color: gray;
        {%endif%} }
  - type: entities
    entities:
      - entity: input_boolean.trader_sell_enabled_c
        name: Enabled
      - entity: input_number.trader_sell_price_c
      - entity: input_number.trader_export_rate_c
      - entity: input_number.trader_soc_sell_to_c
    title: Plan C
    card_mod:
      style: |
        ha-card {  {% if is_state('sensor.trader_plan_letter','c') %}
          border-color: yellow;
          border-width: 8px;
        {% elif is_state('input_boolean.trader_sell_enabled_c','off') %}
          color: gray;
        {%endif%} }
  - type: entities
    entities:
      - entity: input_boolean.trader_sell_enabled_d
        name: Enabled
      - entity: input_number.trader_sell_price_d
      - entity: input_number.trader_export_rate_d
      - entity: input_number.trader_soc_sell_to_d
    title: Plan D
    card_mod:
      style: |
        ha-card {  {% if is_state('sensor.trader_plan_letter','d') %}
          border-color: yellow;
          border-width: 8px;
        {% elif is_state('input_boolean.trader_sell_enabled_d','off') %}
          color: gray;
        {%endif%} }
  - type: entities
    entities:
      - entity: input_boolean.trader_sell_enabled_e
        name: Enabled
      - entity: input_number.trader_sell_price_e
      - entity: input_number.trader_export_rate_e
      - entity: input_number.trader_soc_sell_to_e
    title: Plan E
    card_mod:
      style: |
        ha-card {  {% if is_state('sensor.trader_plan_letter','e') %}
          border-color: yellow;
          border-width: 8px;
        {% elif is_state('input_boolean.trader_sell_enabled_e','off') %}
          color: gray;
        {%endif%} }
  - type: custom:power-flow-card-plus
    entities:
      battery:
        state_of_charge: sensor.sigen_plant_battery_state_of_charge
        entity: sensor.sigen_plant_battery_power
        invert_state: true
      grid:
        entity: number.sigenergy_net_grid_flow
        secondary_info: {}
      solar:
        entity: sensor.sigen_inverter_pv_power
        display_zero_state: true
        secondary_info:
          entity: sensor.solcast_pv_forecast_forecast_remaining_today
          unit_of_measurement: kWh
      home:
        secondary_info: {}
        entity: number.sig_house_flow
    clickable_entities: true
    display_zero_lines:
      mode: show
      transparency: 50
      grey_color:
        - 189
        - 189
        - 189
    use_new_flow_rate_model: true
    w_decimals: 0
    kw_decimals: 1
    min_flow_rate: 0.75
    max_flow_rate: 6
    max_expected_power: 30000
    min_expected_power: 0.01
    watt_threshold: 1000
    transparency_zero_lines: 0
    sort_individual_devices: false
    grid_options:
      columns: 12
      rows: 6
  - type: entities
    entities:
      - entity: input_number.trader_export_rate_z
    title: No battery exports (Plan Z)
    card_mod:
      style: |
        ha-card {  {% if is_state('sensor.trader_plan_letter','z') %}
          border-color: yellow;
          border-width: 8px;
        {%endif%} }
  - type: entities
    entities:
      - entity: input_number.trader_charge_from_grid_price
        name: Priced under
      - entity: binary_sensor.trader_charge_from_grid_price_met
    title: Charge from Grid
    card_mod:
      style: >
        ha-card {  {% if
        is_state('binary_sensor.trader_charge_fr_grid_price_met','on') %}
          border-color: yellow;
          border-width: 8px; {% elif is_state('input_boolean.trader_divert_solar_enabled','off') %}
          color: gray;
        {%endif%} }
  - type: entities
    entities:
      - input_boolean.trader_divert_solar_enabled
      - input_number.trader_solar_divert_sell_price
    title: Excess Solar Exports
    card_mod:
      style: >
        ha-card {  {% if
        is_state('binary_sensor.trader_solar_divert_conditions_met', 'on') %}
          border-color: yellow;
          border-width: 8px; {% elif is_state('input_boolean.trader_divert_solar_enabled','off') %}
          color: gray;
        {%endif%} }
  - type: custom:power-flow-card-plus
    entities:
      battery:
        entity:
          consumption: number.sigen_plant_ess_max_discharging_limit
          production: number.sigen_plant_ess_max_charging_limit
      grid:
        entity:
          production: number.sigen_plant_grid_export_limitation
          consumption: number.sigen_plant_grid_import_limitation
          unit_of_measurement: kW
      solar:
        entity: number.sigen_plant_pv_max_power_limit
        display_zero_state: true
    clickable_entities: true
    display_zero_lines:
      mode: show
      transparency: 50
      grey_color:
        - 189
        - 189
        - 189
    min_flow_rate: 0
    transparency_zero_lines: 0
    grid_options:
      columns: 12
      rows: 6
  - type: entities
    entities:
      - input_boolean.trader_enable_auto_change_export_limit
      - input_boolean.trader_increase_export_rate_by_solar
      - input_boolean.trader_enable_auto_selling_from_battery
    title: Settings
  - type: entities
    entities:
      - entity: input_number.trader_prefer_grid_priced_under
        name: Priced under
    title: Use grid instead of battery
    card_mod:
      style: >
        ha-card {  {% if
        is_state('binary_sensor.trader_use_cheap_grid_not_battery', 'on') %}
          border-color: yellow;
          border-width: 8px; {% elif is_state('input_boolean.trader_divert_solar_enabled','off') %}
          color: gray;
        {%endif%} }
column_span: 4
